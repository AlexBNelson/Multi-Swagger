function cov_2pl0s4sung(){var path="C:\\Users\\User\\source\\repos\\multi-swagger\\Multi-Swagger\\src\\helpers\\memoizeN.js";var hash="1d118629718c5397a4a732f4f01864a594510787";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\User\\source\\repos\\multi-swagger\\Multi-Swagger\\src\\helpers\\memoizeN.js",statementMap:{"0":{start:{line:10,column:27},end:{line:14,column:1}},"1":{start:{line:10,column:34},end:{line:14,column:1}},"2":{start:{line:11,column:2},end:{line:13,column:48}},"3":{start:{line:13,column:31},end:{line:13,column:47}},"4":{start:{line:16,column:13},end:{line:16,column:30}},"5":{start:{line:16,column:26},end:{line:16,column:30}},"6":{start:{line:20,column:17},end:{line:20,column:40}},"7":{start:{line:21,column:21},end:{line:21,column:55}},"8":{start:{line:22,column:4},end:{line:22,column:33}},"9":{start:{line:26,column:17},end:{line:26,column:40}},"10":{start:{line:27,column:21},end:{line:27,column:55}},"11":{start:{line:28,column:4},end:{line:28,column:30}},"12":{start:{line:32,column:17},end:{line:32,column:40}},"13":{start:{line:33,column:4},end:{line:33,column:57}},"14":{start:{line:37,column:17},end:{line:46,column:1}},"15":{start:{line:38,column:35},end:{line:38,column:42}},"16":{start:{line:39,column:2},end:{line:39,column:23}},"17":{start:{line:41,column:19},end:{line:41,column:40}},"18":{start:{line:43,column:2},end:{line:43,column:31}},"19":{start:{line:45,column:2},end:{line:45,column:17}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:27},end:{line:10,column:28}},loc:{start:{line:10,column:34},end:{line:14,column:1}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:34},end:{line:10,column:35}},loc:{start:{line:10,column:41},end:{line:14,column:1}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:13,column:15},end:{line:13,column:16}},loc:{start:{line:13,column:31},end:{line:13,column:47}},line:13},"3":{name:"(anonymous_3)",decl:{start:{line:16,column:13},end:{line:16,column:14}},loc:{start:{line:16,column:26},end:{line:16,column:30}},line:16},"4":{name:"(anonymous_4)",decl:{start:{line:19,column:2},end:{line:19,column:3}},loc:{start:{line:19,column:14},end:{line:23,column:3}},line:19},"5":{name:"(anonymous_5)",decl:{start:{line:25,column:2},end:{line:25,column:3}},loc:{start:{line:25,column:11},end:{line:29,column:3}},line:25},"6":{name:"(anonymous_6)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:11},end:{line:34,column:3}},line:31},"7":{name:"(anonymous_7)",decl:{start:{line:37,column:17},end:{line:37,column:18}},loc:{start:{line:37,column:42},end:{line:46,column:1}},line:37}},branchMap:{"0":{loc:{start:{line:11,column:9},end:{line:13,column:48}},type:"binary-expr",locations:[{start:{line:11,column:9},end:{line:11,column:25}},{start:{line:11,column:29},end:{line:11,column:45}},{start:{line:12,column:7},end:{line:12,column:28}},{start:{line:13,column:7},end:{line:13,column:48}}],line:11},"1":{loc:{start:{line:37,column:22},end:{line:37,column:37}},type:"default-arg",locations:[{start:{line:37,column:33},end:{line:37,column:37}}],line:37}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0,0,0],"1":[0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"1d118629718c5397a4a732f4f01864a594510787"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2pl0s4sung=function(){return actualCoverage;};}return actualCoverage;}cov_2pl0s4sung();import memoize from"lodash/memoize";/**
 * This function is extension on top of lodash.memoize.
 * It uses all the arguments of the `fn` as the cache key instead of just the first one.
 * If resolver is provided, it determines the cache key for
 * storing the result based on the arguments provided to the memoized function.
 */cov_2pl0s4sung().s[0]++;const shallowArrayEquals=a=>{cov_2pl0s4sung().f[0]++;cov_2pl0s4sung().s[1]++;return b=>{cov_2pl0s4sung().f[1]++;cov_2pl0s4sung().s[2]++;return(cov_2pl0s4sung().b[0][0]++,Array.isArray(a))&&(cov_2pl0s4sung().b[0][1]++,Array.isArray(b))&&(cov_2pl0s4sung().b[0][2]++,a.length===b.length)&&(cov_2pl0s4sung().b[0][3]++,a.every((val,index)=>{cov_2pl0s4sung().f[2]++;cov_2pl0s4sung().s[3]++;return val===b[index];}));};};cov_2pl0s4sung().s[4]++;const list=(...args)=>{cov_2pl0s4sung().f[3]++;cov_2pl0s4sung().s[5]++;return args;};class Cache extends Map{delete(key){cov_2pl0s4sung().f[4]++;const keys=(cov_2pl0s4sung().s[6]++,Array.from(this.keys()));const foundKey=(cov_2pl0s4sung().s[7]++,keys.find(shallowArrayEquals(key)));cov_2pl0s4sung().s[8]++;return super.delete(foundKey);}get(key){cov_2pl0s4sung().f[5]++;const keys=(cov_2pl0s4sung().s[9]++,Array.from(this.keys()));const foundKey=(cov_2pl0s4sung().s[10]++,keys.find(shallowArrayEquals(key)));cov_2pl0s4sung().s[11]++;return super.get(foundKey);}has(key){cov_2pl0s4sung().f[6]++;const keys=(cov_2pl0s4sung().s[12]++,Array.from(this.keys()));cov_2pl0s4sung().s[13]++;return keys.findIndex(shallowArrayEquals(key))!==-1;}}cov_2pl0s4sung().s[14]++;const memoizeN=(fn,resolver=(cov_2pl0s4sung().b[1][0]++,list))=>{cov_2pl0s4sung().f[7]++;const{Cache:OriginalCache}=(cov_2pl0s4sung().s[15]++,memoize);cov_2pl0s4sung().s[16]++;memoize.Cache=Cache;const memoized=(cov_2pl0s4sung().s[17]++,memoize(fn,resolver));cov_2pl0s4sung().s[18]++;memoize.Cache=OriginalCache;cov_2pl0s4sung().s[19]++;return memoized;};export default memoizeN;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMnBsMHM0c3VuZyIsImFjdHVhbENvdmVyYWdlIiwibWVtb2l6ZSIsInMiLCJzaGFsbG93QXJyYXlFcXVhbHMiLCJhIiwiZiIsImIiLCJBcnJheSIsImlzQXJyYXkiLCJsZW5ndGgiLCJldmVyeSIsInZhbCIsImluZGV4IiwibGlzdCIsImFyZ3MiLCJDYWNoZSIsIk1hcCIsImRlbGV0ZSIsImtleSIsImtleXMiLCJmcm9tIiwiZm91bmRLZXkiLCJmaW5kIiwiZ2V0IiwiaGFzIiwiZmluZEluZGV4IiwibWVtb2l6ZU4iLCJmbiIsInJlc29sdmVyIiwiT3JpZ2luYWxDYWNoZSIsIm1lbW9pemVkIl0sInNvdXJjZXMiOlsibWVtb2l6ZU4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1lbW9pemUgZnJvbSBcImxvZGFzaC9tZW1vaXplXCJcclxuXHJcbi8qKlxyXG4gKiBUaGlzIGZ1bmN0aW9uIGlzIGV4dGVuc2lvbiBvbiB0b3Agb2YgbG9kYXNoLm1lbW9pemUuXHJcbiAqIEl0IHVzZXMgYWxsIHRoZSBhcmd1bWVudHMgb2YgdGhlIGBmbmAgYXMgdGhlIGNhY2hlIGtleSBpbnN0ZWFkIG9mIGp1c3QgdGhlIGZpcnN0IG9uZS5cclxuICogSWYgcmVzb2x2ZXIgaXMgcHJvdmlkZWQsIGl0IGRldGVybWluZXMgdGhlIGNhY2hlIGtleSBmb3JcclxuICogc3RvcmluZyB0aGUgcmVzdWx0IGJhc2VkIG9uIHRoZSBhcmd1bWVudHMgcHJvdmlkZWQgdG8gdGhlIG1lbW9pemVkIGZ1bmN0aW9uLlxyXG4gKi9cclxuXHJcbmNvbnN0IHNoYWxsb3dBcnJheUVxdWFscyA9IChhKSA9PiAoYikgPT4ge1xyXG4gIHJldHVybiBBcnJheS5pc0FycmF5KGEpICYmIEFycmF5LmlzQXJyYXkoYilcclxuICAgICYmIGEubGVuZ3RoID09PSBiLmxlbmd0aFxyXG4gICAgJiYgYS5ldmVyeSgodmFsLCBpbmRleCkgPT4gdmFsID09PSBiW2luZGV4XSlcclxufVxyXG5cclxuY29uc3QgbGlzdCA9ICguLi5hcmdzKSA9PiBhcmdzXHJcblxyXG5jbGFzcyBDYWNoZSBleHRlbmRzIE1hcCB7XHJcbiAgZGVsZXRlKGtleSkge1xyXG4gICAgY29uc3Qga2V5cyA9IEFycmF5LmZyb20odGhpcy5rZXlzKCkpXHJcbiAgICBjb25zdCBmb3VuZEtleSA9IGtleXMuZmluZChzaGFsbG93QXJyYXlFcXVhbHMoa2V5KSlcclxuICAgIHJldHVybiBzdXBlci5kZWxldGUoZm91bmRLZXkpXHJcbiAgfVxyXG5cclxuICBnZXQoa2V5KSB7XHJcbiAgICBjb25zdCBrZXlzID0gQXJyYXkuZnJvbSh0aGlzLmtleXMoKSlcclxuICAgIGNvbnN0IGZvdW5kS2V5ID0ga2V5cy5maW5kKHNoYWxsb3dBcnJheUVxdWFscyhrZXkpKVxyXG4gICAgcmV0dXJuIHN1cGVyLmdldChmb3VuZEtleSlcclxuICB9XHJcblxyXG4gIGhhcyhrZXkpIHtcclxuICAgIGNvbnN0IGtleXMgPSBBcnJheS5mcm9tKHRoaXMua2V5cygpKVxyXG4gICAgcmV0dXJuIGtleXMuZmluZEluZGV4KHNoYWxsb3dBcnJheUVxdWFscyhrZXkpKSAhPT0gLTFcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IG1lbW9pemVOID0gKGZuLCByZXNvbHZlciA9IGxpc3QpID0+IHtcclxuICBjb25zdCB7IENhY2hlOiBPcmlnaW5hbENhY2hlIH0gPSBtZW1vaXplXHJcbiAgbWVtb2l6ZS5DYWNoZSA9IENhY2hlXHJcblxyXG4gIGNvbnN0IG1lbW9pemVkID0gbWVtb2l6ZShmbiwgcmVzb2x2ZXIpXHJcblxyXG4gIG1lbW9pemUuQ2FjaGUgPSBPcmlnaW5hbENhY2hlXHJcblxyXG4gIHJldHVybiBtZW1vaXplZFxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBtZW1vaXplTlxyXG4iXSwibWFwcGluZ3MiOiI4aEhBZVk7QUFBQUEsY0FBQSxTQUFBQSxDQUFBLFNBQUFDLGNBQUEsV0FBQUEsY0FBQSxFQUFBRCxjQUFBLEdBZlosTUFBTyxDQUFBRSxP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